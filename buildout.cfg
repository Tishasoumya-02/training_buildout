[buildout]
extends =
# The coredev for Plone 5: https://github.com/plone/buildout.coredev/tree/5.0
# We only use the versions and checkouts
    https://raw.githubusercontent.com/plone/buildout.coredev/5.0/sources.cfg
    https://raw.githubusercontent.com/plone/buildout.coredev/5.0/checkouts.cfg
    https://raw.githubusercontent.com/plone/buildout.coredev/5.0/versions.cfg

# We add our own versions
    versions.cfg

versions = versions

# Tell mr.developer to ask before updating a chckout.
# The default in coredev is 'force' which always updates.
always-checkout = true
show-picked-versions = true
find-links = http://dist.plone.org
extensions = mr.developer
sources = sources

# Put checkouts in src-mrd. We keep our own package in src
sources-dir = src-mrd

# Extend the coredevs-checkouts with our own
auto-checkout +=
    Products.PloneFormGen
    collective.behavior.banner
#    ploneconf.site
#    starzel.votable_behavior

# If you use vagrant please add a '#' at the beginning of the
# following line and uncomment the line after by removing the '#'.
# This will set the location of three directories:
# file-storage: set in [instance] defines where the ZODB is stored
# blob-storage: set in [instance] defines where Binary Files are stored
# packages-dir: set in [packages] defines a location for symlinks to all eggs
buildout_dir = ${buildout:directory}
#buildout_dir = /home/vagrant

parts =
    checkversions
    codeintel
    instance
    mrbob
    packages
    robot
    test
    zopepy

eggs =
    Plone
    Pillow

# development tools
    z3c.jbot
    plone.api
    plone.reload
    Products.PDBDebugMode
    plone.app.debugtoolbar

# TTW Forms (based on Archetypes)
    Products.PloneFormGen

# Image Gallery
    collective.plonetruegallery
    collective.ptg.nivogallery

# Add features to normal tables using a js-library
    collective.js.datatables

# Generate facetted search & navigation
    eea.facetednavigation

# Inheritable Banners and Sliders
    collective.behavior.banner

# The addon we develop in the training
#    ploneconf.site

# Voting on content
#    starzel.votable_behavior

zcml =

test-eggs +=
#    ploneconf.site [test]

[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
debug-mode = on
verbose-security = on
deprecation-warnings = on
eggs = ${buildout:eggs}
zcml = ${buildout:zcml}
file-storage = ${buildout:buildout_dir}/var/filestorage/Data.fs
blob-storage = ${buildout:buildout_dir}/var/blobstorage

[test]
recipe = zc.recipe.testrunner
eggs = ${buildout:test-eggs}
defaults = ['--exit-with-status', '--auto-color', '--auto-progress']

[robot]
recipe = zc.recipe.egg
eggs =
    ${buildout:test-eggs}
    Pillow
    plone.app.robotframework[ride,reload,debug]

[packages]
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}
location = ${buildout:buildout_dir}/packages

[codeintel]
recipe = corneti.recipes.codeintel
eggs = ${buildout:eggs}

[code-analysis]
recipe = plone.recipe.codeanalysis
directory = ${buildout:directory}/src/ploneconf.site/src/
pep3101 = False
imports = True
debug-statements = True
prefer-single-quotes = True
utf8-header = True
deprecated-aliases = True

[checkversions]
recipe = zc.recipe.egg
eggs = z3c.checkversions [buildout]

[zopepy]
recipe = zc.recipe.egg
eggs = ${buildout:eggs}
interpreter = zopepy

[mrbob]
recipe = zc.recipe.egg
eggs =
    mr.bob
    bobtemplates.plone

[sources]
ploneconf.site = fs ploneconf.site full-path=${buildout:directory}/src/ploneconf.site
collective.behavior.banner = git https://github.com/collective/collective.behavior.banner.git pushurl=git@github.com:collective/collective.behavior.banner.git rev=af2dc1f21b23270e4b8583cf04eb8e962ade4c4d
starzel.votable_behavior = git https://github.com/collective/starzel.votable_behavior.git pushurl=git://github.com/collective/starzel.votable_behavior.git

# Checkouts to make addons we use work with Plone 5
Products.PloneFormGen = git https://github.com/starzel/Products.PloneFormGen.git pushurl=git@github.com:starzel/Products.PloneFormGen.git rev=fa2b4df60c8ab1ab88bf1497904b958d5ed214d4
